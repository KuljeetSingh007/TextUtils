{"ast":null,"code":"var _jsxFileName = \"D:\\\\Developer\\\\React\\\\reactJs\\\\apple\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport \"../styles/TextForm.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const textareaRef = useRef(null);\n  const copyToClipboard = () => {\n    if (textareaRef.current) {\n      //   const text = document.getElementById('myText').value;  //way 1 to get value\n      const text = textareaRef.current.value; //way 2 to get value\n      navigator.clipboard.writeText(text).then(() => {\n        props.showAlert(\"Copied text to clipboard !\", \"dark\");\n      }).catch(err => {\n        console.error('Failed to copy text: ', err);\n      });\n    }\n  };\n  // const removeExtraSpaces = () => {\n  //     const cleanedText = text.replace(/\\s+/g, ' ').trim();\n  //     setText(cleanedText);\n  // };  \n  const handleSpaces = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    props.showAlert(\"Removed whitespaces from text !\", \"success\");\n  };\n  const [text, setText] = useState('');\n  const [words, setWords] = useState('');\n  const [chars, setChars] = useState('');\n  const [btnText, setbtnText] = useState('A');\n  // const [pText1, setpText1] = useState('');\n  // const [pText2, setpText2] = useState('');\n  const btnClick = () => {\n    let abi = text;\n    if (abi !== text.toUpperCase()) {\n      setText(text.toUpperCase());\n      setbtnText('a');\n      props.showAlert(\"Text is Converted to uppercase !\", \"info\");\n    } else if (abi === text.toUpperCase()) {\n      setText(abi.toLowerCase());\n      setbtnText('A');\n      props.showAlert(\"Text is Converted to lowercase !\", \"info\");\n    }\n  };\n  const changeText = event => {\n    setText(event.target.value);\n  };\n  const callCount = () => {\n    setWords(text.split(\" \").filter(element => {\n      return element.length !== 0;\n    }).length);\n    setChars(text.length);\n    props.showAlert(`${words} words and ${chars} characters`, \"info\");\n    // setpText1(' words and ')\n    // setpText2('characters')\n  };\n  const callClear = () => {\n    // setpText1('')\n    // setpText2('')\n    setText(\"\");\n    setWords(\"\");\n    setChars(\"\");\n    props.showAlert(\"Text Cleared !\", \"warning\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"my-2\",\n        style: {\n          margin: '0',\n          color: props.mode === 'light' ? '#565c63' : '#f0f0f0'\n        },\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textArea mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"myText\",\n          ref: textareaRef,\n          placeholder: \"Enter Text\",\n          className: \"form-control\",\n          value: text,\n          style: {\n            backgroundColor: props.mode === 'light' ? 'white' : '#565c63',\n            color: props.mode === 'light' ? '#565c63' : '#f0f0f0'\n          },\n          onChange: changeText,\n          rows: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: btnClick,\n        className: \"btn btn-outline-info my-1\",\n        children: btnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: callCount,\n        className: \"btn btn-outline-danger mx-3 my-1\",\n        children: \"Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: callClear,\n        className: \"btn btn-outline-warning my-1\",\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: copyToClipboard,\n        className: \"btn btn-outline-secondary mx-3 my-1\",\n        children: \"Copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSpaces,\n        className: \"btn btn-outline-success my-1\",\n        children: \"Remove Extra Spaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countText\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: props.mode === 'light' ? '#565c63' : '#f0f0f0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"green\",\n          children: [text.split(\" \").filter(element => {\n            return element.length !== 0;\n          }).length, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 86\n        }, this), \"words and \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"orange\",\n          children: text.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 200\n        }, this), \"  chars\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: props.mode === 'light' ? '#565c63' : '#f0f0f0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"green\",\n          children: 0.008 * text.split(\" \").length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 86\n        }, this), \" Minutes to read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: props.mode === 'light' ? '#565c63' : '#f0f0f0'\n        },\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: props.mode === 'light' ? '#565c63' : '#f0f0f0'\n        },\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"cc3xWgPkM8cJYbtlkoiIN440l2M=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","textareaRef","copyToClipboard","current","text","value","navigator","clipboard","writeText","then","showAlert","catch","err","console","error","handleSpaces","newText","split","setText","join","words","setWords","chars","setChars","btnText","setbtnText","btnClick","abi","toUpperCase","toLowerCase","changeText","event","target","callCount","filter","element","length","callClear","children","className","style","margin","color","mode","heading","fileName","_jsxFileName","lineNumber","columnNumber","id","ref","placeholder","backgroundColor","onChange","rows","type","onClick","_c","$RefreshReg$"],"sources":["D:/Developer/React/reactJs/apple/src/components/TextForm.js"],"sourcesContent":["import React, { useRef, useState } from 'react'\r\nimport \"../styles/TextForm.css\"\r\nexport default function TextForm(props) {\r\n\r\n    const textareaRef = useRef(null);\r\n    const copyToClipboard = () => {\r\n        if (textareaRef.current) {\r\n            //   const text = document.getElementById('myText').value;  //way 1 to get value\r\n            const text = textareaRef.current.value;//way 2 to get value\r\n            navigator.clipboard.writeText(text).then(() => {\r\n                props.showAlert(\"Copied text to clipboard !\",\"dark\")\r\n\r\n            }).catch(err => {\r\n                console.error('Failed to copy text: ', err);\r\n            });\r\n        }\r\n    };\r\n    // const removeExtraSpaces = () => {\r\n    //     const cleanedText = text.replace(/\\s+/g, ' ').trim();\r\n    //     setText(cleanedText);\r\n    // };  \r\n    const handleSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Removed whitespaces from text !\",\"success\")\r\n    };\r\n    const [text, setText] = useState('');\r\n    const [words, setWords] = useState('');\r\n    const [chars, setChars] = useState('');\r\n    const [btnText, setbtnText] = useState('A');\r\n    // const [pText1, setpText1] = useState('');\r\n    // const [pText2, setpText2] = useState('');\r\n    const btnClick = () => {\r\n        let abi = text;\r\n        if (abi !== text.toUpperCase()) {\r\n            setText(text.toUpperCase())\r\n            setbtnText('a')\r\n            props.showAlert(\"Text is Converted to uppercase !\",\"info\") \r\n        } else if (abi === text.toUpperCase()) {\r\n            setText(abi.toLowerCase())\r\n            setbtnText('A')\r\n            props.showAlert(\"Text is Converted to lowercase !\",\"info\")\r\n\r\n        }\r\n    }\r\n    const changeText = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n    const callCount = () => {\r\n        setWords((text.split(\" \")).filter((element)=>{return element.length!==0}).length)\r\n        setChars(text.length)\r\n        props.showAlert(`${words} words and ${chars} characters`,\"info\")\r\n        // setpText1(' words and ')\r\n        // setpText2('characters')\r\n    }\r\n    const callClear = () => {\r\n\r\n        // setpText1('')\r\n        // setpText2('')\r\n        setText(\"\")\r\n        setWords(\"\")\r\n        setChars(\"\")\r\n        props.showAlert(\"Text Cleared !\",\"warning\")\r\n    }\r\n    return (\r\n        <>\r\n            <div >\r\n                <h4 className='my-2' style={{ margin: '0', color: props.mode === 'light' ? '#565c63' : '#f0f0f0' }}>{props.heading}</h4>\r\n                <div className=\"textArea mb-3\" >\r\n                    <textarea id=\"myText\" ref={textareaRef} placeholder='Enter Text' className=\"form-control\" value={text} style={{ backgroundColor: props.mode === 'light' ? 'white' : '#565c63', color: props.mode === 'light' ? '#565c63' : '#f0f0f0' }} onChange={changeText}  rows=\"2\"></textarea>\r\n                </div>\r\n                <button type=\"button\" onClick={btnClick} className=\"btn btn-outline-info my-1\">{btnText}</button>\r\n                <button type=\"button\" onClick={callCount} className=\"btn btn-outline-danger mx-3 my-1\">Count</button>\r\n                <button type=\"button\" onClick={callClear} className=\"btn btn-outline-warning my-1\">Clear</button>\r\n                <button type=\"button\" onClick={copyToClipboard} className=\"btn btn-outline-secondary mx-3 my-1\">Copy</button>\r\n                <button type=\"button\" onClick={handleSpaces} className=\"btn btn-outline-success my-1\">Remove Extra Spaces</button>\r\n            </div>\r\n            <div className=\"countText\">\r\n                {/* <p style={{ color: props.mode === 'light' ? '#565c63' : '#f0f0f0' }} ><span className='green' >{words}  </span>{pText1}<span className='orange'>{chars} </span>{pText2}</p> */}\r\n                <p style={{ color: props.mode === 'light' ? '#565c63' : '#f0f0f0' }}><span className='green' >{text.split(\" \").filter((element)=>{return element.length!==0}).length} </span>words and <span className='orange'>{text.length}</span>  chars</p>\r\n                <p style={{ color: props.mode === 'light' ? '#565c63' : '#f0f0f0' }}><span className='green' >{0.008 * text.split(\" \").length}</span> Minutes to read</p>\r\n                <h3 style={{ color: props.mode === 'light' ? '#565c63' : '#f0f0f0' }}>Preview</h3>\r\n                <p style={{ color: props.mode === 'light' ? '#565c63' : '#f0f0f0' }}>{text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}